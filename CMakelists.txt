cmake_minimum_required(VERSION 3.10)

project(TextEditor)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

#Adding Source Files to the SOURCE_FILES Variable

include_directories (include/)

file(GLOB_RECURSE SOURCE_FILES src/*.cpp include/*.h)

include(FetchContent)
FetchContent_Declare(SFML
    GIT_REPOSITORY https://github.com/SFML/SFML.git
    GIT_TAG 2.5.1
    GIT_SHALLOW ON
    EXCLUDE_FROM_ALL
    SYSTEM)
FetchContent_MakeAvailable(SFML)


add_executable(${PROJECT_NAME} ${SOURCE_FILES} )
target_compile_features(${PROJECT_NAME} PRIVATE cxx_std_17)
target_link_libraries(${PROJECT_NAME} PRIVATE sfml-graphics sfml-audio sfml-network)

#Copies and Pastes the assets to the Output directory
add_custom_target(copy_assets
    COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_CURRENT_LIST_DIR}/txt ${CMAKE_CURRENT_BINARY_DIR}/bin/txt
)
add_dependencies(${PROJECT_NAME} copy_assets)

add_custom_target(copy_fonts
    COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_CURRENT_LIST_DIR}/fonts ${CMAKE_CURRENT_BINARY_DIR}/bin/fonts
)

add_dependencies(${PROJECT_NAME} copy_fonts)

if (CMAKE_BUILD_TYPE MATCHES "Debug")
	target_compile_definitions(${PROJECT_NAME} PUBLIC "DEBUG")
elseif (CMAKE_BUILD_TYPE MATCHES "Release")
	target_compile_definitions(${PROJECT_NAME} PUBLIC "RELEASE")
endif()
